### Start the Hello Name Orchestration Function and wait until it has finished
### using the default values the Durable Functions extension uses.
POST http://localhost:7071/api/startandwait/HelloName
Content-Type: application/json

"I ❤ Serverless (using defaults)"


### Start the Hello Name Orchestration Function and wait until it has finished
### using the speficied timeout value.
POST http://localhost:7071/api/startandwait/HelloNameOrchestration
    ?timeout=8
Content-Type: application/json

"I ❤ Serverless (only timeout)"


### Start the Hello Name Orchestration Function and wait until it has finished
### using the specified values for timeout and retry interval.
POST http://localhost:7071/api/startandwait/HelloNameOrchestration
    ?timeout=12
    &interval=2
Content-Type: application/json

"I ❤ Serverless (timeout and interval)"


### Start the LongRunning Orchestration Function.
### The Execution time will be longer than the timeout so the 
### StatusResponseMessage is returned instead of the orchestration result.
POST http://localhost:7071/api/startandwait/LongRunningOrchestration
    ?timeout=12
    &interval=2
Content-Type: application/json

20


### Checks the status of an orchestration function.
### Update this orchestrationInstanceId so it matches the ID of your
### running orchestration instance.
@orchestrationInstanceId = d8b1daa9c048474fb89c1139c981f12d
@storageCode = jLm5dvj2FG6pIVhnZaI2Pf5InGpM1uMoRkhzFRGnmnL3LPWsQ5a3ag==
@hubName=DurableDemo
GET http://localhost:7071/runtime/webhooks/durabletask/instances/{{orchestrationInstanceId}}
    ?taskHub={{hubName}}
    &connection=Storage
    &code={{storageCode}}